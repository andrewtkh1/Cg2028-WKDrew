 	.syntax unified
 	.cpu cortex-m3
 	.thumb
 	.align 2
 	.global	classification
 	.thumb_func

@ CG2028 Assignment, Sem 2, AY 2021/21
@ (c) CG2028 Teaching Team, ECE NUS, 2021

@ student 1: Name: , Matriculation No.:
@ student 2: Name: , Matriculation No.:
@ eg: student 1: Name: John Doe , Matriculation No.: A021234N

@Register map
@R0 - N, returns class
@R1 - points
@R2 - label
@R3 - sample
@R4 - Array of distance
@R5 - Sample X1
@R6 - Sample X2
@R7 - Sample K

@Variables map
@ .lcomm distance - Contains all the distance. Currently set for N = 100
@ Equates
classification:
@ PUSH / save (only those) registers which are modified by your function
		PUSH {R0-R4}
@ parameter registers need not be saved.

@ write asm function body here
		BL LOADSAMPLE
		LDR R0,[R0]
		LDR R4, =DISTANCE
		BL SETDISTANCE

@ prepare value to return (class) to C program in R0
@ the #5 here is an arbitrary result
		MOV R0, #5
@ POP / restore original register values. DO NOT save or restore R0. Why?
		POP {R0-R4}

@ return to C program
		BX	LR
@R0 - N
@R1 - Points
@R4 - Dist
SETDISTANCE:


LOADSAMPLE:
		@Load Sample X,Y,K
		LDR R5, [R3], #4
		LDR R6, [R3], #4
		LDR R7, [R3], #4
		BX	LR

@ you could write your code without SUBROUTINE
SUBROUTINE:

		BX LR

@label: .word value
K: .word 1
@.lcomm label num_bytes
.lcomm DISTANCE 400 @Set for N = 100
